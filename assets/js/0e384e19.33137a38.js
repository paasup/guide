"use strict";(self.webpackChunkpaasup=self.webpackChunkpaasup||[]).push([[976],{2053:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"intro","title":"\uce74\ud0c8\ub85c\uadf8 \uc124\uc815\uac12","description":"\x3c!-- Gitea \uc2dc\uc2a4\ud15c \uce74\ud0c8\ub85c\uadf8:","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/guide/docs/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar"}');var a=s(4848),t=s(8453);const o={sidebar_position:1},i="\uce74\ud0c8\ub85c\uadf8 \uc124\uc815\uac12",l={},c=[{value:"gitea/6.0.3-2",id:"gitea603-2",level:2},{value:"mlflow/2.1.0-1",id:"mlflow210-1",level:2},{value:"kubeflow/1.10.0",id:"kubeflow1100",level:2},{value:"Rancher/2.10.1-1",id:"rancher2101-1",level:2},{value:"rancher-monitoring-crd/104.1.2",id:"rancher-monitoring-crd10412",level:2},{value:"rancher-monitoring/104.1.2",id:"rancher-monitoring10412",level:2},{value:"spark-operator/2.0.2",id:"spark-operator202",level:2},{value:"qdrant/1.12.4",id:"qdrant1124",level:2},{value:"langflow-ide/0.1.0",id:"langflow-ide010",level:2},{value:"superset/0.13.5-1",id:"superset0135-1",level:2},{value:"ollama/1.12.2",id:"ollama1122",level:2},{value:"flowise/3.10.2",id:"flowise3102",level:2},{value:"flowise/6.0.0",id:"flowise600",level:2},{value:"open-webui/0.5.4",id:"open-webui054",level:2},{value:"vllm/0.0.11",id:"vllm0011",level:2},{value:"langfuse/1.0.0-rc.2-1",id:"langfuse100-rc2-1",level:2},{value:"postgresql-ha/11.9.4-1",id:"postgresql-ha1194-1",level:2},{value:"airflow/1.16.0",id:"airflow1160",level:2},{value:"litellm/0.4.4",id:"litellm044",level:2},{value:"unitycatalog/0.2.0",id:"unitycatalog020",level:2},{value:"nemo/25.4.0",id:"nemo2540",level:2},{value:"nim/25.4.0",id:"nim2540",level:2},{value:"kserve/0.1.0",id:"kserve010",level:2},{value:"ragflow/0.20.1",id:"ragflow0201",level:2},{value:"starrocks-operator/0.11.0",id:"starrocks-operator0110",level:2},{value:"starrocks/0.11.0",id:"starrocks0110",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"\uce74\ud0c8\ub85c\uadf8-\uc124\uc815\uac12",children:"\uce74\ud0c8\ub85c\uadf8 \uc124\uc815\uac12"})}),"\n",(0,a.jsx)(n.h2,{id:"gitea603-2",children:"gitea/6.0.3-2"}),"\n",(0,a.jsx)(n.p,{children:"Gitea \uc77c\ubc18 \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.p,{children:"DB \ub0b4\uc7a5"}),"\n",(0,a.jsx)(n.p,{children:"\uc544\ub798 \ud56d\ubaa9\uc740 \uc0ac\uc774\ud2b8\uc5d0 \ub530\ub77c \uc218\uc815\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"password"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'global:\n  imageRegistry: ""\n\ningress:\n  enabled: true\n  annotations:\n    konghq.com/protocols: https\n    konghq.com/https-redirect-status-code: "301"\n    cert-manager.io/cluster-issuer: "root-ca-issuer" \n    cert-manager.io/duration: 8760h  \n    cert-manager.io/renew-before: 720h\n  hosts:\n    - host: "{{ .Name }}.{{ .Domain }}"\n      paths:\n        - path: /\n          pathType: Prefix\n  tls:\n    - hosts:\n        host: "{{ .Name }}.{{ .Domain }}"\n      secretName: "{{ .Name }}-tls-secret"\n\nextraVolumes:\n - name: keycloak-tls\n   secret:\n     secretName: keycloak-tls\n\n\nextraContainerVolumeMounts:\n  - name: keycloak-tls\n    mountPath: /etc/ssl/certs/ca.crt\n    subPath: ca.crt\n\nlifecycleHooks:\n  postStart:\n    exec:\n      command: \n      - "/bin/sh"\n      -  "-c"\n      - |\n        POST_START\n\nreplicaCount: 1\n\nresources:\n  requests:\n    cpu: 100m\n    memory: 300Mi\n  limits:\n    cpu: 300m\n    memory: 500Mi\n\npersistence:\n  enabled: true\n  size: 10Gi\n  storageClass: "longhorn"\n\ngitea:\n  admin:   \n    username: sudouser\n    password: ""\n    email: "gitea@local.domain"\n    existingSecret: "$INFISICAL_SECRET"\n  config:\n    APP_NAME: paasup git\n    RUN_MODE: prod\n    server:\n      ROOT_URL: "https://{{ .Name }}.{{ .Domain }}"\n    database:\n      DB_TYPE: postgres\n      HOST: "{{ .Name }}-postgresql:5432"\n      NAME: gitea\n      USER: gitea\n      PASSWD: gitea\n      CHARSET: utf8\n      SSL_MODE: disable\n    service:\n      DEFAULT_ALLOW_CREATE_ORGANIZATION: true\n    repository:\n      DEFAULT_BRANCH: master\n\npostgresql:\n  enabled: true\n  global:\n    postgresql:\n      postgresqlDatabase: gitea\n      postgresqlUsername: gitea\n      postgresqlPassword: gitea\n      servicePort: 5432\n  persistence:\n    size: 5Gi\n'})}),"\n",(0,a.jsx)(n.h2,{id:"mlflow210-1",children:"mlflow/2.1.0-1"}),"\n",(0,a.jsx)(n.p,{children:"Mlflow \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.p,{children:"\uc678\ubd80 minio \uc0ac\uc6a9\ud560 \ub54c"}),"\n",(0,a.jsx)(n.p,{children:"\uc544\ub798 \ud56d\ubaa9\uc740 \uc0ac\uc774\ud2b8\uc5d0 \ub530\ub77c \uc218\uc815\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"password"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'tracking:\n  auth:\n    enabled: false\n  service:\n    type: ClusterIP\n  ingress:\n    enabled: true\n    pathType: ImplementationSpecific\n    hostname: "{{ .Name }}.{{ .Domain }}"\n    annotations:\n      cert-manager.io/cluster-issuer: "root-ca-issuer"\n      cert-manager.io/duration: 8760h\n      cert-manager.io/renew-before: 720h\n      konghq.com/plugins: oidc-plugin, keycloak-authz-plugin\n    path: /\n    tls: false\n    extraTls:\n      - hosts:\n          - "{{ .Name }}.{{ .Domain }}"\n        secretName: "{{ .Name }}-tls-secret"\n  extraArgs:\n    - "--gunicorn-opts=--timeout 600"\npostgresql:\n  enabled: true\n  auth:\n    username: mlflow\n    password: ""\n    database: bitnami_mlflow\n    existingSecret: "$INFISICAL_SECRET"\nminio:\n  enabled: false\nexternalS3:\n  host: "$externalS3.host"\n  port: 443\n  useCredentialsInSecret: true\n  existingSecret: "$INFISICAL_SECRET"\n  existingSecretAccessKeyIDKey: "root-user"\n  existingSecretKeySecretKey: "root-password"\n  protocol: "https"\n  bucket: "$externalS3.bucket"\n  serveArtifacts: true\n'})}),"\n",(0,a.jsx)(n.h2,{id:"kubeflow1100",children:"kubeflow/1.10.0"}),"\n",(0,a.jsx)(n.p,{children:"Kubeflow \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: kubeflow.org/v1\nkind: Profile\nmetadata:\n  name: "{{ .Name }}"\nspec:\n  owner:\n    kind: User\n    name: "{{ .Email }}"\n  resourceQuotaSpec:\n    hard:\n      cpu: "16"\n      memory: 32Gi\n      persistentvolumeclaims: "12"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"rancher2101-1",children:"Rancher/2.10.1-1"}),"\n",(0,a.jsx)(n.p,{children:"Rancher \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'hostname: "{{ .Name }}.{{ .Domain }}"\ningress:\n  enable: true\n  tls:\n    source: secret\n    secretName: rancher-tls-ingress\n  extraAnnotations:\n    konghq.com/connect-timeout: "30000"\n    konghq.com/read-timeout: "1800000"\n    konghq.com/write-timeout: "1800000"\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n\nprivateCA: true\n\nreplicas: 1\n\ntolerations: []\n\nnodeSelector: {}\n\nresources:\n  requests:\n    cpu: 100m\n    memory: 500Mi\n  limits:\n    cpu: 1000m\n    memory: 1000Mi\n\nextraEnv:\n  - name: TZ\n    value: Asia/Seoul\n\npreinstallHook: true\n\nnewPassword: "$PASSWORD_KEY"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"rancher-monitoring-crd10412",children:"rancher-monitoring-crd/104.1.2"}),"\n",(0,a.jsx)(n.p,{children:"rancher-monitoring-crd \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"---\n"})}),"\n",(0,a.jsx)(n.h2,{id:"rancher-monitoring10412",children:"rancher-monitoring/104.1.2"}),"\n",(0,a.jsx)(n.p,{children:"rancher-monitoring \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"global:\n  cattle:\n    clusterId: local\n    clusterName: local\n\ngrafana:\n  resources:\n    requests:\n      cpu: 100m\n      memory: 100Mi\n    limits:\n      cpu: 200m\n      memory: 200Mi\n\nprometheus:\n  prometheusSpec:\n    resources:\n      requests:\n        cpu: 250m\n        memory: 100Mi\n      limits:\n        cpu: 1000m\n        memory: 2000Mi\n    scrapeInterval: 1m\n    evaluationInterval: 1m\n    retention: 30d\n    retentionSize: 10GB\n    storageSpec:\n      volumeClaimTemplate:\n        spec:\n          accessModes:\n            - ReadWriteOnce\n          resources:\n            requests:\n              storage: 10Gi\n          storageClassName: longhorn\n          volumeMode: Filesystem\n\nalertmanager:\n  alertmanagerSpec:\n    resources:\n      requests:\n        cpu: 100m\n        memory: 100Mi\n      limits:\n        cpu: 1000m\n        memory: 500Mi\n\nrke2ControllerManager:\n  enabled: true\nrke2Etcd:\n  enabled: true\nrke2Proxy:\n  enabled: true\nrke2Scheduler:\n  enabled: true\nrke2IngressNginx:\n  enabled: true\n"})}),"\n",(0,a.jsx)(n.h2,{id:"spark-operator202",children:"spark-operator/2.0.2"}),"\n",(0,a.jsx)(n.p,{children:"spark-operator \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'image:\n  registry: docker.io\n  repository: kubeflow/spark-operator\n  tag: "2.0.2"\n\ncontroller:\n  workers: 10\n\n  logLevel: info\n\n  uiService:\n    enable: true\n  uiIngress:\n    enable: true\n    urlFormat: "{{ .Name }}.{{ .Domain }}/{{`{{$appNamespace}}`}}/{{`{{$appName}}`}}"\n\n  resources:\n    limits:\n      cpu: 100m\n      memory: 300Mi\n    requests:\n      cpu: 100m\n      memory: 300Mi\n\n  workqueueRateLimiter:\n    bucketQPS: 50\n    bucketSize: 500\n    maxDelay:\n      enable: true\n      duration: 6h\n\nwebhook:\n  resources:\n    limits:\n      cpu: 100m\n      memory: 300Mi\n    requests:\n      cpu: 100m\n      memory: 300Mi\n\nspark:\n  jobNamespaces: []\n'})}),"\n",(0,a.jsx)(n.h2,{id:"qdrant1124",children:"qdrant/1.12.4"}),"\n",(0,a.jsx)(n.p,{children:"qdrant \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'images:\n  repository: docker.io/qdrant/qdrant\n  tag: v1.12.4\n\nreplicaCount: 1\n\nnodeSelector: {}\ntolerations: []\nresources: {}\n\npersistence:\n  accessModes: ["ReadWriteOnce"]\n  size: 10Gi\n  storageClassName: ""\n\nconfig:\n  log_level: INFO\n  cluster:\n    enabled: true\n    p2p:\n      port: 6335\n    consensus:\n      tick_period_ms: 100\n\napiKey: false\nreadOnlyApiKey: false\n\ningress:\n  enabled: true\n  annotations:\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n    konghq.com/plugins: oidc-plugin, keycloak-authz-plugin\n  hosts:\n    - host: "{{ .Name }}.{{ .Domain }}"\n      paths:\n        - path: /\n          pathType: Prefix\n          servicePort: 6333\n  tls:\n    - hosts:\n        - "{{ .Name }}.{{ .Domain }}"\n      secretName: "{{ .Name }}-tls-secret"\n\ndip:\n  mainPath: dashboard      \n'})}),"\n",(0,a.jsx)(n.h2,{id:"langflow-ide010",children:"langflow-ide/0.1.0"}),"\n",(0,a.jsx)(n.p,{children:"langflow-ide \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'langflow:\n  backend:\n    replicaCount: 1\n    image:\n      repository: langflowai/langflow-backend\n      tag: "v1.1.1"\n    resources:\n      requests:\n        cpu: 0.5\n        memory: 1Gi\n    nodeSelector: {}\n    tolerations: []\n    backendOnly: true\n    env:\n      - name: LANGFLOW_PORT\n        value: "7860"\n      - name: LANGFLOW_LOG_LEVEL\n        value: "info"\n      - name: LANGFLOW_AUTO_LOGIN\n        value: "True"\n      - name: LANGFLOW_SUPERUSER\n        value: "$langflow.backend.env.username"\n      - name: LANGFLOW_SUPERUSER_PASSWORD\n        value: "$langflow.backend.env.password"  \n    externalDatabase:\n      enabled: true\n      driver:\n        value: "postgresql"\n      host:\n        value: "{{ .Name }}-ide-postgresql-service"\n      port:\n        value: "5432"\n      database:\n        value: "langflow-db"\n      user:\n        value: "langflow"\n      password:\n        valueFrom:\n          secretKeyRef:\n            key: "password"\n            name: "$INFISICAL_SECRET"\n    sqlite:\n      enabled: false\n    probe:\n      failureThreshold: 3\n      periodSeconds: 10\n      timeoutSeconds: 5\n      initialDelaySeconds: 5\n  frontend:\n    enabled: true\n    replicaCount: 1\n    image:\n      repository: langflowai/langflow-frontend\n      tag: "v1.1.1"\n    resources:\n      requests:\n        cpu: 0.3\n        memory: 512Mi\n    nodeSelector: {}\n    tolerations: []\n\ningress:\n  enabled: true\n  annotations:\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n    konghq.com/plugins: oidc-plugin, keycloak-authz-plugin\n  hosts:\n    - host: "{{ .Name }}.{{ .Domain }}"\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n          servicePort: 7860\n  tls:\n    - hosts:\n        - "{{ .Name }}.{{ .Domain }}"\n      secretName: "{{ .Name }}-tls-secret"\n\npostgresql:\n  enabled: true\n  fullnameOverride: "{{ .Name }}-ide-postgresql-service"\n  auth:\n    username: "langflow"\n    password: ""\n    database: "langflow-db"\n    existingSecret: "$INFISICAL_SECRET"\n  primary:\n    persistence:\n      size: 5Gi\n      storageClass: ""\n'})}),"\n",(0,a.jsx)(n.h2,{id:"superset0135-1",children:"superset/0.13.5-1"}),"\n",(0,a.jsx)(n.p,{children:"superset \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'configOverrides:\n  mapbox: |\n    MAPBOX_API_KEY = \'$configOverrides.mapbox\' \n    ENABLE_PROXY_FIX = True\n    FEATURE_FLAGS = {\n      "DYNAMIC_PLUGINS": True\n    }\n  secret: |\n    SECRET_KEY = \'$configOverrides.secret\'\n  my_override: |\n    FEATURE_FLAGS = {\n    \t"ENABLE_TEMPLATE_REMOVE_FILTERS" : True,\n    \t"ENABLE_TEMPLATE_PROCESSING": True,\t\n        "DASHBOARD_NATIVE_FILTERS" : True,\n        "DASHBOARD_NATIVE_FILTERS_SET": True\n    }     \n  enable_oauth: |\n    from flask_appbuilder.security.manager import (AUTH_DB, AUTH_OAUTH)\n    from superset.security import SupersetSecurityManager\n    from flask import request\n\n    import requests\n    import logging\n\n    class CustomSsoSecurityManager(SupersetSecurityManager):\n        def oauth_user_info(self, provider, response=None):\n            me = self.appbuilder.sm.oauth_remotes[provider].get("openid-connect/userinfo")\n            me.raise_for_status()\n            data = me.json()\n\n            logging.debug("User info from Keycloak: %s", data)\n\n            role = []\n            username = data.get("preferred_username", "")\n            host = request.host\n            dip_api_url =  "http://dip-api.platform.svc.cluster.local:8087"\n            \n            url = f"{dip_api_url}/gwapi/v1/projectusers/{username}"\n            request_data = {"url": f"https://{host}"}\n            response = requests.post(url, json=request_data, headers={"Content-Type": "application/json"}, verify=False)\n\n            if response.status_code == 200:\n                logging.info(f"API \uc694\uccad \uc131\uacf5: {response.status_code}, {response.text}")\n                role.append(response.json().get("roleName",""))\n            else:\n                logging.info(f"API \uc694\uccad \uc2e4\ud328: {response.status_code}, {response.text}")\n                role.append("")\n\n            return {\n                "username": data.get("preferred_username", ""),\n                "first_name": data.get("given_name", ""),\n                "last_name": data.get("family_name", ""),\n                "email": data.get("email", ""),\n                "role_keys": role,\n            }\n\n    AUTH_TYPE = AUTH_OAUTH\n    AUTH_USER_REGISTRATION = True\n    AUTH_USER_REGISTRATION_ROLE = "Public"\n    AUTH_ROLES_SYNC_AT_LOGIN = True\n    CUSTOM_SECURITY_MANAGER = CustomSsoSecurityManager\n\n    OAUTH_PROVIDERS = [\n        {\n            "name": "keycloak",\n            "icon": "fa-key",\n            "token_key": "access_token",\n            "remote_app": {\n                "client_id": "$KEYCLOAK_CLIENT_ID",\n                "client_secret": "$KEYCLOAK_CLIENT_SECRET",\n                "client_kwargs": {\n                  "scope": "openid email profile",\n                  \'verify\': False\n                },\n                \'server_metadata_url\': \'$KEYCLOAK_URL/realms/$KEYCLOAK_REALM/.well-known/openid-configuration\',\n                \'api_base_url\': \'$KEYCLOAK_URL/realms/$KEYCLOAK_REALM/protocol/\'\n            }\n        }\n    ]\n\n    AUTH_ROLES_MAPPING = {\n    \'root\': [\'Admin\'],\n    \'admin\': [\'Admin\'],\n    \'manager\': [\'Admin\'],\n    \'member\': [\'Alpha\'],\n    }\n\nbootstrapScript: |\n  #!/bin/bash\n  pip install sqlalchemy-drill psycopg2-binary Authlib\n\nimage:\n  repository: apachesuperset.docker.scarf.sh/apache/superset\n  tag: ~\n  pullPolicy: IfNotPresent\nresources: {}\nnodeSelector: {}\ntolerations: []\n\ningress:\n  enabled: true\n  annotations:\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n    konghq.com/plugins: oidc-plugin, keycloak-authz-plugin\n  path: /\n  pathType: ImplementationSpecific\n  hosts:\n    - "{{ .Name }}.{{ .Domain }}"\n  tls:\n    - hosts:\n        - "{{ .Name }}.{{ .Domain }}"\n      secretName: "{{ .Name }}-tls-secret"\n\nsupersetNode:\n  replicas:\n    enabled: true\n    replicaCount: 1\n\n  connections:\n    redis_host: "{{ .Name }}-redis-headless"\n    redis_port: "6379"\n    redis_user: ""\n    redis_cache_db: "1"\n    redis_celery_db: "0"\n    redis_ssl:\n      enabled: false\n      ssl_cert_reqs: CERT_NONE\n    db_host: "{{ .Name }}-postgresql"\n    db_port: "5432"\n    db_user: superset\n    db_pass: "$supersetNode.connections.db_pass"\n    db_name: superset\n  resources: {}\n\nsupersetWorker:\n  replicas:\n    enabled: true\n    replicaCount: 1\n  resources: {}\n\nsupersetCeleryBeat:\n  enabled: false\n  resources: {}\n\nsupersetCeleryFlower:\n  enabled: false\n  replicaCount: 1\n  resources: {}\n\npostgresql:\n  enabled: true\n  auth:\n    username: superset\n    password: ""\n    database: superset\n    existingSecret: "$INFISICAL_SECRET"\n  image:\n    registry: docker.io\n  primary:\n    resources:\n      limits: {}\n      requests:\n        memory: 256Mi\n        cpu: 250m\n    persistence:\n      enabled: true\n      storageClass: ""\n      size: 8Gi\n\nredis:\n  enabled: true\n  architecture: standalone\n  auth:\n    enabled: false\n    existingSecret: ""\n    existingSecretPasswordKey: ""\n  image:\n    registry: docker.io\n  master:\n    resources:\n      limits: {}\n      requests: {}\n    persistence:\n      enabled: true\n      storageClass: ""\n      size: 8Gi\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ollama1122",children:"ollama/1.12.2"}),"\n",(0,a.jsx)(n.p,{children:"ollama \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'image:\n  repository: ollama/ollama\n  tag: 0.5.4\n\nruntimeClassName: nvidia\n\npersistentVolume:\n  enabled: true\n  size: "30Gi"\n  storageClass: longhorn\n\nresources:\n  requests:\n    memory: 4096Mi\n    cpu: 2000m\n  limits:\n    memory: 8192Mi\n    cpu: 4000m\n\nollama:\n  gpu:\n    enabled: ture\n    type: "nvidia"\n    number: 1\n\n  models:\n    pull:\n      - mistral\n      #- benedict/linkbricks-mistral-nemo-korean:12b\n      #- benedict/linkbricks-gemma2-korean:27b\n      #- qwen2.5-coder:32b\n      #- codeqwen:7b-chat\n      # - llama3\n\ningress:\n  enabled: true\n  annotations:\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n    konghq.com/plugins: oidc-plugin, keycloak-authz-plugin\n  hosts:\n    - host: "{{ .Name }}.{{ .Domain }}"\n      paths:\n        - path: /\n          pathType: Prefix\n  tls:\n    - hosts:\n        - "{{ .Name }}.{{ .Domain }}"\n      secretName: "{{ .Name }}-tls-secret"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"flowise3102",children:"flowise/3.10.2"}),"\n",(0,a.jsx)(n.p,{children:"flowise \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'image:\n  registry: docker.io\n\npersistence:\n  enabled: true\n  size: 1Gi\n  storageClass: longhorn\n\nresources: {}\n\ningress:\n  enabled: true\n  annotations:\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n    konghq.com/plugins: oidc-plugin, keycloak-authz-plugin\n  hosts:\n    - host: "{{ .Name }}.{{ .Domain }}"\n      paths:\n        - /\n  tls:\n    - hosts:\n        - "{{ .Name }}.{{ .Domain }}"\n      secretName: "{{ .Name }}-tls-secret"\n\npostgresql:\n  enabled: true\n  auth:\n    existingSecret: "$INFISICAL_SECRET"\n  primary:\n    persistence:\n      enabled: true\n      size: 8Gi\n      storageClass: ""\n'})}),"\n",(0,a.jsx)(n.h2,{id:"flowise600",children:"flowise/6.0.0"}),"\n",(0,a.jsx)(n.p,{children:"flowise \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'global:\n  storageClass: "longhorn"\n\nimage:\n  registry: docker.io\n\npersistence:\n  enabled: true\n  size: 1Gi\n  storageClass: longhorn\n\nresources: {}\n\nworker:\n  enabled: true\n  replicaCount: 1\n  resources: {}\n\ningress:\n  enabled: true\n  annotations:\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n    konghq.com/plugins: oidc-plugin, keycloak-authz-plugin\n  hosts:\n    - host: "{{ .Name }}.{{ .Domain }}"\n      paths:\n        - /\n  tls:\n    - hosts:\n        - "{{ .Name }}.{{ .Domain }}"\n      secretName: "{{ .Name }}-tls-secret"\n\npostgresql:\n  enabled: true\n  auth:\n    existingSecret: "$INFISICAL_SECRET"\n  primary:\n    persistence:\n      enabled: true\n      size: 8Gi\n\nredis:\n  enabled: true\n'})}),"\n",(0,a.jsx)(n.h2,{id:"open-webui054",children:"open-webui/0.5.4"}),"\n",(0,a.jsx)(n.p,{children:"open-webui \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'ollama:\n  enabled: false\ntika:\n  enabled: false\nwebsocket:\n  enabled: false\nredis-cluster:\n  enabled: false\ningress:\n  enabled: true\n  annotations:\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n  host: "{{ .Name }}.{{ .Domain }}"\n  tls: true\n  existingSecret: "{{ .Name }}-tls-secret"\npersistence:\n  enabled: true\n  size: 2Gi\n  existingClaim: ""\n  subPath: ""\n  accessModes:\n    - ReadWriteOnce\n  storageClass: ""\n  selector: {}\n  annotations: {}\nextraEnvVars:\n  - name: OPENAI_API_KEY\n    value: "$extraEnvVars"\n  - name: OAUTH_CLIENT_ID\n    value: $KEYCLOAK_CLIENT_ID\n  - name: OAUTH_CLIENT_SECRET\n    value: $KEYCLOAK_CLIENT_SECRET\n  - name: OPENID_PROVIDER_URL\n    value: $KEYCLOAK_URL/realms/$KEYCLOAK_REALM/.well-known/openid-configuration\n  - name: OAUTH_PROVIDER_NAME\n    value: paasup\n  - name: OAUTH_SCOPES\n    value: "openid email profile"\n  - name: ENABLE_LOGIN_FORM\n    value: "true"\n  - name: SSL_CERT_FILE\n    value: "/etc/ssl/certs/keycloak/ca.crt"\n  - name: ENABLE_OAUTH_SIGNUP\n    value: "true"\n  - name: OAUTH_MERGE_ACCOUNTS_BY_EMAIL\n    value: "true"\n  - name: DEFAULT_USER_ROLE\n    value: user\n  - name: ENV\n    value: prod\n\nvolumeMounts:\n  initContainer: []\n  container:\n    - name: "keycloak-tls"\n      mountPath: "/etc/ssl/certs/keycloak"\n\nvolumes:\n  - name: "keycloak-tls"\n    secret:\n      secretName: keycloak-tls\n'})}),"\n",(0,a.jsx)(n.h2,{id:"vllm0011",children:"vllm/0.0.11"}),"\n",(0,a.jsx)(n.p,{children:"vllm \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'servingEngineSpec:\n  modelSpec:\n    - name: "llama3"\n      repository: "vllm/vllm-openai"\n      tag: "latest"\n      modelURL: "$servingEngineSpec.modelSpec.modelURL"\n      replicaCount: 1\n\n      requestCPU: 10\n      requestMemory: "16Gi"\n      requestGPU: 1\n\n      pvcStorage: "50Gi"\n\n      vllmConfig:\n        enableChunkedPrefill: false\n        enablePrefixCaching: false\n        maxModelLen: 24576\n        dtype: "float16"\n        extraArgs: ["--disable-log-requests", "--gpu-memory-utilization", "0.8"]\n      hf_token: "$servingEngineSpec.modelSpec.hf_token"\n  resources:\n    requests:\n      cpu: "4"\n      memory: "16G"\n    limits:\n      cpu: "8"\n      memory: "32G"\n\nrouterSpec:\n  repository: "lmcache/lmstack-router"\n  tag: "latest"\n  resources:\n    requests:\n      cpu: "2"\n      memory: "8G"\n    limits:\n      cpu: "4"\n      memory: "16G"\n  ingress:\n    enabled: true\n    className: ""\n    annotations:\n      cert-manager.io/cluster-issuer: "root-ca-issuer"\n      cert-manager.io/duration: 8760h\n      cert-manager.io/renew-before: 720h\n      konghq.com/plugins: oidc-plugin, keycloak-authz-plugin\n    hosts:\n      - host: "{{ .Name }}.{{ .Domain }}"\n        paths:\n          - path: /\n            pathType: Prefix\n    tls:\n      - secretName: "{{ .Name }}-tls-secret"\n        hosts:\n          - "{{ .Name }}.{{ .Domain }}"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"langfuse100-rc2-1",children:"langfuse/1.0.0-rc.2-1"}),"\n",(0,a.jsx)(n.p,{children:"langfuse \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'langfuse:\n  logging:\n    level: info\n  salt:\n    value: "$langfuse.salt.value"\n  encryptionKey:\n    value: "$langfuse.encryptionKey.value"\n\n  ingress:\n    enabled: true\n    annotations:\n      cert-manager.io/cluster-issuer: "root-ca-issuer"\n    hosts:\n      - host: "{{ .Name }}.{{ .Domain }}"\n        paths:\n          - path: /\n            pathType: ImplementationSpecific\n    tls:\n      enabled: true\n      secretName: "{{ .Name }}-tls-secret"\n  web:\n    image:\n      repository: langfuse/langfuse\n    resources: {}\n    replicas: 1\n  worker:\n    image:\n      repository: langfuse/langfuse-worker\n    resources: {}\n    replicas: 1\n\n  nextauth:\n    url: "https://{{ .Name }}.{{ .Domain }}"\n    secret:\n      value: "$langfuse.nextauth.secret.value"\n  additionalEnv:\n    - name: AUTH_DISABLE_USERNAME_PASSWORD\n      value: "true"\n    - name: AUTH_KEYCLOAK_CLIENT_ID\n      value: "$KEYCLOAK_CLIENT_ID"\n    - name: "AUTH_KEYCLOAK_CLIENT_SECRET"\n      value: "$KEYCLOAK_CLIENT_SECRET"\n    - name: "AUTH_KEYCLOAK_ISSUER"\n      value: "$KEYCLOAK_URL/realms/$KEYCLOAK_REALM"\n    - name: NODE_TLS_REJECT_UNAUTHORIZED\n      value: "0"\n\npostgresql:\n  auth:\n    username: "postgres"\n    existingSecret: "$INFISICAL_SECRET"\n    secretKeys:\n      userPasswordKey: "postgres-password"\n\n  migration:\n    autoMigrate: true\n\n  persistence:\n    enabled: true\n    storageClass: ""\n    size: 5Gi\n\nredis:\n  auth:\n    enabled: true\n    existingSecret: "$INFISICAL_SECRET"\n    existingSecretPasswordKey: "valkey-password"\n  primary:\n    persistence:\n      enabled: true\n      storageClass: ""\n      size: 5Gi\n\nclickhouse:\n  deploy: true\n  auth:\n    username: default\n    password: ""\n    existingSecret: "$INFISICAL_SECRET"\n    existingSecretKey: "admin-password"\n\n  shards: 1\n  persistence:\n    enabled: true\n    storageClass: ""\n    size: 10Gi\n\ns3:\n  deploy: false\n  bucket: "$s3.bucket"\n  region: "auto"\n  endpoint: "https://$s3.endpoint"\n  accessKeyId:\n    value: "$s3.accessKeyId.value"\n  secretAccessKey:\n    value: "$s3.secretAccessKey.value"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"postgresql-ha1194-1",children:"postgresql-ha/11.9.4-1"}),"\n",(0,a.jsx)(n.p,{children:"postgresql-ha \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'global:\n  imageRegistry: ""\n\npostgresql:\n  username: postgres\n  existingSecret: "$INFISICAL_SECRET"\n\n  maxConnections: "100"\n  sharedPreloadLibraries: "repmgr, pgaudit, pg_stat_statements"\n\n  replicaCount: 1\n\n  extraEnvVars:\n    - name: TZ\n      value: Asia/Seoul\n\n  resources:\n    requests:\n      cpu: 100m\n      memory: 512Mi\n    limits:\n      cpu: 500m\n      memory: 1024Mi\n\n  tolerations: []\n\n  nodeSelector: {}\n\npgpool:\n  existingSecret: "$INFISICAL_SECRET"\n\n  replicaCount: 0\n\npersistence:\n  enabled: true\n  storageClass: ""\n  size: 1Gi\n\nvolumePermissions:\n  enabled: true\n  podSecurityContext:\n    runAsUser: 0\n'})}),"\n",(0,a.jsx)(n.h2,{id:"airflow1160",children:"airflow/1.16.0"}),"\n",(0,a.jsx)(n.p,{children:"airflow \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'ingress:\n  web:\n    enabled: true\n    annotations:\n      cert-manager.io/cluster-issuer: "root-ca-issuer"\n      cert-manager.io/duration: 8760h\n      cert-manager.io/renew-before: 720h\n      konghq.com/plugins: oidc-plugin, keycloak-authz-plugin\n    hosts:\n      - name: "{{ .Name }}.{{ .Domain }}"\n        tls:\n          enabled: true\n          secretName: "{{ .Name }}-tls-secret"\n\nexecutor: "KubernetesExecutor"\n\nconfig:\n  core:\n    executor: KubernetesExecutor\n    default_timezone: kst\n  logging:\n    colored_console_log: "False"\n    logging_level: "INFO"\n  webserver:\n    enable_proxy_fix: "True"\n    rbac: "True"\n    default_ui_timezone: kst\n\nscheduler:\n  replicas: 1\n\ndags:\n  persistence:\n    enabled: true\n    size: 5Gi\n    storageClassName: longhorn\n    accessMode: ReadWriteMany\n  gitSync:\n    enabled: true\n    repo: "$dags.gitSync.repo"\n    branch: master\n    rev: HEAD\n    depth: 1\n    subPath: ""\n    credentialsSecret: "$INFISICAL_SECRET"\n    env:\n      - name: GIT_SSL_NO_VERIFY\n        value: "true"\n\nwebserver:\n  defaultUser:\n    enabled: true\n    password: "$webserver.defaultUser.password"\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds: 120\n  startupProbe:\n    initialDelaySeconds: 30\n  webserverConfig: |\n    AUTH_ROLE_PUBLIC = \'User\'\n\nlogs:\n  persistence:\n    enabled: true\n    size: 5Gi\n    storageClassName: longhorn\n\nstatsd:\n  enabled: false\n\npostgresql:\n  enabled: true\n  auth:\n    username: "postgres"\n    existingSecret: "$INFISICAL_SECRET"\n    secretKeys:\n      userPasswordKey: "postgres-password"\n  primary:\n    persistence:\n      enabled: true\n      size: 8Gi\n      storageClass: ""\n\nmigrateDatabaseJob:\n  useHelmHooks: false\n\ndata:\n  metadataSecretName: "$INFISICAL_SECRET"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"litellm044",children:"litellm/0.4.4"}),"\n",(0,a.jsx)(n.p,{children:"litellm \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'masterkey: "$masterkey"\n\nproxy_config:\n  model_list: []\n\ningress:\n  enabled: true\n  className: "kong"\n  annotations:\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n  hosts:\n    - host: "{{ .Name }}.{{ .Domain }}"\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - secretName: "{{ .Name }}-tls-secret"\n      hosts:\n        - "{{ .Name }}.{{ .Domain }}"\n\ndip:\n  mainPath: ui        \n'})}),"\n",(0,a.jsx)(n.h2,{id:"unitycatalog020",children:"unitycatalog/0.2.0"}),"\n",(0,a.jsx)(n.p,{children:"unitycatalog \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'storage:\n  credentials:\n    s3:\n      - bucketPath: "$storage.credentials.s3.bucketPath"\n        region: "us-east-1"\n        awsRoleArn:\n        serviceEndpoint: "$storage.credentials.s3.serviceEndpoint"\n        credentialsSecretName: "$INFISICAL_SECRET"\n\nauth:\n  enabled: true\n  users:\n    - name: "{{ .Username }}"\n      email: "{{ .Email }}"\n\n  provider: keycloak\n  authorizationUrl: "$KEYCLOAK_URL/auth/realms/$KEYCLOAK_REALM/protocol/openid-connect/auth"\n  clientSecretName: "$INFISICAL_SECRET"\n\nprivateCA:\n  enabled: true\n  secretName: "{{ .Name }}-tls-secret"\n\nserver:\n  statefulset:\n    image:\n      repository: paasup/unitycatalog\n      tag: "0.3.0-minio-250522"\n    resources: {}\n    nodeSelector: {}\n    tolerations: []\n    affinity: {}\n  ingress:\n    enabled: true\n    className: kong\n    annotations:\n      cert-manager.io/cluster-issuer: root-ca-issuer\n      konghq.com/https-redirect-status-code: "301"\n      konghq.com/protocols: https\n    hosts:\n      - host: "{{ .Name }}.{{ .Domain }}"\n        paths:\n          - path: /\n            pathType: ImplementationSpecific\n    tls:\n      - hosts:\n          - "{{ .Name }}.{{ .Domain }}"\n        secretName: "{{ .Name }}-tls-secret"\n  config:\n    persistence:\n      enabled: true\n      accessModes: ["ReadWriteOnce"]\n      size: 100Mi\n      storageClassName: ""\n    logLevel: "INFO"\n\ndb:\n  type: postgresql\n  postgresqlConfig:\n    user: uc_default_user\n    password: "$db.postgresqlConfig.password"\n    database: ucdb\n\npostgresql:\n  enabled: true\n  auth:\n    username: "uc_default_user"\n    password: ""\n    database: "ucdb"\n    existingSecret: "$INFISICAL_SECRET"\n\n  persistence:\n    enabled: true\n    accessModes:\n      - ReadWriteOnce\n    size: 5Gi\n    storageClassName: ""\n'})}),"\n",(0,a.jsx)(n.h2,{id:"nemo2540",children:"nemo/25.4.0"}),"\n",(0,a.jsx)(n.p,{children:"nemo \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'ngcAPIKey: "$ngcAPIKey"\n\nimagePullSecrets:\n  - name: nvcrimagepullsecret\n    registry: nvcr.io\n    username: "$oauthtoken"\n    password: "$ngcAPIKey"\n\ndata-store:\n  enabled: true\n  external:\n    rootUrl: "https://nemo-datastore-{{ .Name }}.{{ .Domain }}"\n    domain: "nemo-datastore-{{ .Name }}.{{ .Domain }}"\n\ncustomizer:\n  enabled: true\n  customizerConfig:\n    meta/llama-3.2-1b-instruct:\n      enabled: true\n\nnim:\n  enabled: false\n\nevaluator:\n  enabled: true\n  argoWorkflows:\n    enabled: true\n    crds:\n      install: false\n\nguardrails:\n  enabled: true\n\nnemo-operator:\n  enabled: true\n\nnim-operator:\n  enabled: true\n\ndgxc-admission-controller:\n  enabled: false\n\nentity-store:\n  enabled: true\n\nvolcano:\n  enabled: true\n\ndeployment-management:\n  enabled: true\n  deployments:\n    defaultStorageClass: "longhorn"\n\nnim-proxy:\n  enabled: true\n\ningress:\n  enabled: true\n  annotations:\n    cert-manager.io/cluster-issuer: root-ca-issuer\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n  className: "kong"\n  tls:\n    - hosts:\n        - "nemo-{{ .Name }}.{{ .Domain }}"\n      secretName: "{{ .Name }}-tls-secret"\n  hosts:\n    default:\n      name: "nemo-{{ .Name }}.{{ .Domain }}"\n    nimProxy:\n      name: "nim-{{ .Name }}.{{ .Domain }}"\n    dataStore:\n      name: "data-store-{{ .Name }}.{{ .Domain }}"\n\nvirtualService:\n  enabled: false\n'})}),"\n",(0,a.jsx)(n.h2,{id:"nim2540",children:"nim/25.4.0"}),"\n",(0,a.jsx)(n.p,{children:"nim \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'nimService:\n  name: "{{ .Name }}"\n  existingAuthSecret: "$INFISICAL_SECRET"\n  existingPVC: ""\n\n  env:\n    - name: NIM_PEFT_SOURCE\n      value: http://nemo-entity-store.nemo:8000\n    - name: NIM_SERVED_MODEL_NAME\n      value: "$nimService.modelName"\n    - name: NIM_MODEL_NAME\n      value: "$nimService.modelName"\n    - name: NIM_PEFT_REFRESH_INTERVAL\n      value: "30"  \n\nimage:\n  repository: "$image.repository"\n  pullPolicy: IfNotPresent\n  tag: "$image.tag"\n\nimagePullSecrets:\n  - name: nvcrimagepullsecret\n    registry: nvcr.io\n    username: "$oauthtoken"\n    password: "$imagePullSecrets.password"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"kserve010",children:"kserve/0.1.0"}),"\n",(0,a.jsx)(n.p,{children:"kserve \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'inferenceService:\n  name: "{{ .Name }}"\n  \n  model:\n    args:\n      - --backend=vllm\n      - --model_name=$model.name\n      - --dtype=float16\n    storageUri: "$model.volume"\n  \n  resources:\n    limits:\n      cpu: "8"\n      memory: 16Gi\n      nvidia.com/gpu: "1"\n    requests:\n      cpu: "4"\n      memory: 8Gi\n      nvidia.com/gpu: "1"\n\ningress:\n  annotations:\n    cert-manager.io/cluster-issuer: "root-ca-issuer"\n  hosts: \n    - host: "{{ .Name }}-kserve.{{ .Namespace }}.{{ .Domain }}"\n  tls:\n    secretName: "{{ .Name }}-tls-secret"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ragflow0201",children:"ragflow/0.20.1"}),"\n",(0,a.jsx)(n.p,{children:"ragflow \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'env:\n  DOC_ENGINE: infinity\n\n  MYSQL_PASSWORD: "$env.mysqlPassword"\n  MYSQL_DBNAME: rag_flow\n\n  MINIO_ROOT_USER: rag_flow\n  MINIO_PASSWORD: "$env.minioPassword"\n\n  REDIS_PASSWORD: "$env.redisPassword"\n\n  RAGFLOW_IMAGE: infiniflow/ragflow:v0.20.1-slim\n\n  TIMEZONE: "Asia/Seoul"\n\n  DOC_BULK_SIZE: 4\n\n  EMBEDDING_BATCH_SIZE: 16\n\n  REQUESTS_CA_BUNDLE: /tmp/ca.crt\n  SSL_CERT_FILE: /tmp/ca.crt\n\nragflow:\n\n  service_conf:\n    oauth:\n      oidc:\n        display_name: "KEYCLOAK"\n        client_id: "$KEYCLOAK_CLIENT_ID"\n        client_secret: "$KEYCLOAK_CLIENT_SECRET"\n        issuer: "$KEYCLOAK_URL/realms/$KEYCLOAK_REALM"\n        scope: "openid email profile"\n        redirect_uri: "https://{{ .Name }}.{{ .Domain }}/v1/user/oauth/callback/oidc"\n\n  llm_factories:\n\n  volumes:\n    - name: keycloak-tls\n      secret:\n        secretName: keycloak-tls\n\n  volumeMounts:\n    - name: keycloak-tls\n      mountPath: /tmp/ca.crt\n      subPath: ca.crt\n      readOnly: true  \n\n  deployment:\n    strategy:\n    resources:\n  service:\n    type: ClusterIP\n  api:\n    service:\n      enabled: true\n      type: ClusterIP\n\ninfinity:\n  image:\n    repository: infiniflow/infinity\n    tag: v0.6.0-dev5\n  storage:\n    className:\n    capacity: 5Gi\n  deployment:\n    strategy:\n    resources:\n  service:\n    type: ClusterIP\n\nminio:\n  image:\n    repository: quay.io/minio/minio\n    tag: RELEASE.2023-12-20T01-00-02Z\n  storage:\n    className:\n    capacity: 5Gi\n  deployment:\n    strategy:\n    resources:\n  service:\n    type: ClusterIP\n\nmysql:\n  image:\n    repository: mysql\n    tag: 8.0.39\n  storage:\n    className:\n    capacity: 5Gi\n  deployment:\n    strategy:\n    resources:\n  service:\n    type: ClusterIP\n\nredis:\n  image:\n    repository: valkey/valkey\n    tag: 8\n  storage:\n    className:\n    capacity: 5Gi\n  persistence:\n    enabled: true\n  deployment:\n    strategy:\n    resources:\n  service:\n    type: ClusterIP\n\n\ningress:\n  enabled: true\n  className: "kong"\n  annotations: \n    cert-manager.io/cluster-issuer: root-ca-issuer\n    cert-manager.io/duration: 8760h\n    cert-manager.io/renew-before: 720h\n    konghq.com/https-redirect-status-code: \'301\'\n    konghq.com/protocols: https\n  hosts:\n    - host: "{{ .Name }}.{{ .Domain }}"\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n   - secretName: "{{ .Name }}-tls-secret"\n     hosts:\n       - "{{ .Name }}.{{ .Domain }}"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"starrocks-operator0110",children:"starrocks-operator/0.11.0"}),"\n",(0,a.jsx)(n.p,{children:"starrocks-operator \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'timeZone: Asia/Seoul\n\nimage:\n  repository: starrocks/operator\n  tag: "v1.11.0"\n  pullPolicy: IfNotPresent\n\nresources:\n  limits:\n    cpu: 500m\n    memory: 512Mi\n  requests:\n    cpu: 500m\n    memory: 400Mi\n\nnodeSelector:\n  kubernetes.io/os: linux\n\ntolerations: []\n\naffinity: {}\n\nwebhook:\n  enabled: true\n  port: 9443\n  certManager:\n    enabled: false\n\nmetrics:\n  enabled: true\n  port: 8080\n  serviceMonitor:\n    enabled: false\n'})}),"\n",(0,a.jsx)(n.h2,{id:"starrocks0110",children:"starrocks/0.11.0"}),"\n",(0,a.jsx)(n.p,{children:"starrocks \uce74\ud0c8\ub85c\uadf8:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'initPassword:\n  enabled: true\n  password: ""\n  passwordSecret: "$INFISICAL_SECRET"\n\ntimeZone: Asia/Seoul\n\nstarrocksCluster:\n  enabledBe: false\n  enabledCn: true\n\nstarrocksFESpec:\n  replicas: 3\n  runAsNonRoot: "false"\n  service:\n    type: ClusterIP\n  resources:\n    requests:\n      cpu: 1\n      memory: 1Gi\n  storageSpec:\n    name: fe\n    storageClassName: "longhorn"\n    storageSize: 10Gi\n    logStorageSize: 5Gi\n  \n  nodeSelector: {}\n  affinity: {}\n  tolerations: []\n  \n  config: |\n    run_mode = shared_data\n    cloud_native_storage_type = S3\n    aws_s3_endpoint = $starrocksFESpec.config.endpoint\n\n    aws_s3_path = $starrocksFESpec.config.path\n\n    aws_s3_access_key = $starrocksFESpec.config.accesskey\n    aws_s3_secret_key = $starrocksFESpec.config.secretkey\n    aws_s3_use_instance_profile = false\n    aws_s3_use_aws_sdk_default_behavior = false\n\n    enable_load_volume_from_conf = true\n\n\nstarrocksCnSpec:\n  replicas: 3\n  runAsNonRoot: "false"\n  resources:\n    requests:\n      cpu: 1\n      memory: 2Gi\n  storageSpec:\n    name: be \n    storageClassName: "longhorn"\n    storageSize: 15Gi\n    logStorageSize: 10Gi\n  nodeSelector: {}\n  affinity: {}\n  tolerations: []\n  autoScalingPolicy: {}\n\n\nstarrocksFeProxySpec:\n  enabled: true\n  resolver: "rke2-coredns-rke2-coredns.kube-system.svc.cluster.local"\n  service:\n    type: ClusterIP\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var r=s(6540);const a={},t=r.createContext(a);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);